[
  {
    "name": "Food Controller",
    "goal": "Easy to use mobile application for controlling food intake.",
    "description": "I want to gain more experience in Kotlin, so at the same time I can create something useful. It is self-contained application with database containing most frequently eaten food products. Users can also add new ones, set daily goals for food intake, keep track of its history, all of which make it easy to control it.",
    "links": [
      "https://github.com/Iprogrammerr/Food-Controller"
    ]
  },
  {
    "name": "Bright Server",
    "goal": "Lightweight, standalone easy to use http server and java web framework.",
    "description": "Soon after I began to search for less complex and opinionated alternatives to Spring I started to use Embedded Jetty. That was pretty good, but I think that idea of embedded servers can be further simplified. My goal is to provide most of the conveniences that Spring gives when developing web applications, but at the same time create something a lot simpler and more flexible to use. It do not have any dependencies and its API is so simple that any seasoned Java developer could become familiar with it under an hour.",
    "links": [
      "https://github.com/Iprogrammerr/Bright-Server/"
    ]
  },
  {
    "name": "Gentle Request",
    "goal": "Compact library for making http requests.",
    "description": "When writing heavily reliant on http protocol Android applications I was never happy with libraries available on the market. Furthermore, \n\t\tas I have already written my own <a href=\"https://github.com/Iprogrammerr/Bright-Server/\" target=\"_blank\">http server</a> I took opportunity to test it from client side and \n\t\tdeepen my knowledge about http. It has simple, yet powerful api, which allows sending bytes, text, json, files and making multipart requests.",
    "links": [
      "https://github.com/Iprogrammerr/Gentle-Request/"
    ]
  },
  {
    "name": "Daily Wisdom",
    "goal": "Mobile application for devices with Android that allows reading quotes from the greatest minds in history. CMS for adding and modyfing data consumed by mobile application. RESTful service that serves as a source of data for both of them.",
    "description": "RESTful service is written in Java, using Spring Boot. CMS was created in pure JavaScript. It was my first JavaScript application, so I figured out that writing everything from scratch is a great idea to learn it. It has very simple UI and does not handle well different screen resolutions. Modyfing content that mobile app consumes is its only use and it serves this goal well. Mobile app is the most important component of the project and at the same time the only one that matters to the end user. It is a native Android application written in Java. Its primary objective is to allow reading quotes in the most comfortable and encouraging way possible. All of its data come from the backend, which is downloaded at the moment of installation and saved locally to SQLite database. From from that time data is synchronized on a weekly basis. Thanks to that approach internet connection is not needed most of the time.",
    "links": [
      "http://iprogrammerr.com/daily-wisdom/",
      "http://www.iprogrammerr.com:8080/daily-wisdom/swagger-ui.html#/",
      "https://github.com/Iprogrammerr/Daily-Wisdom-Backend",
      "https://play.google.com/store/apps/details?id=control.self.igor.dailywisdom"
    ]
  },
  {
    "name": "Algorithms",
    "goal": "Java application for testing various kinds of algorithms.",
    "description": "As I am interested in algorithms and we know that doing is the best way of learning this idea have emerged. It will always be in work in progress state, because everytime I will learn a new algorithm it will be added here. For now it only has backend and can be easily use through Swagger, so frontend is not really needed but creating it is definitely worth considering.",
    "links": [
      "http://iprogrammerr.com:8090/algorithms/swagger-ui.html#/",
      "https://github.com/Iprogrammerr/Algorithms"
    ]
  },
  {
    "name": "Riddle",
    "goal": "Web app that allows users to compete in solving various riddles.",
    "description": "From the idea point of view I want to create responsive, easy and interesting to use web app that will combine exercising your brain with entertainment. From developing my skills point of view the goal is to expand my knowledge of core technologies that frameworks often abstract away and that are a lot more important, time-proven and stable. What I mean by that? Using pure JavaScript on frontend and pure Java on backend. That of course does not mean not using libraries and reinventing the wheel all the time. It means using small, specific ones when they fit my needs. The most important part will be creating my own infrastructure on both front and back end. On backend I just use <del>embedded jetty and servlets</del> <a href=\"https://github.com/Iprogrammerr/Bright-Server/\" target=\"_blank\">Bright Server</a> and jdbc writing SQL and doing object relational mapping by hand. On frontend I want to create my own routing system for SPA, design and create beautiful, user-friendly UI.",
    "links": [
      "https://github.com/Iprogrammerr/Riddle",
      "https://github.com/Iprogrammerr/Riddle-Application"
    ]
  }
]